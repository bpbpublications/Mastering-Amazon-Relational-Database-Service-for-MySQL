#!/bin/bash# Function to display usage informationusage() {  echo "Usage: $0 -i <instance_identifier> -c <instance_class> -e <db_engine> -u <username> -p <password> -d <db_name> -s <storage> -g <security_group_id> -z <availability_zone>"  echo "Options:"  echo "  -i, --identifier         RDS instance identifier"  echo "  -c, --instance-class     RDS instance class"  echo "  -e, --db-engine          Database engine"  echo "  -u, --username           Master username"  echo "  -p, --password           Master password"  echo "  -d, --db-name            Database name"  echo "  -s, --storage            Allocated storage (in GB)"  echo "  -g, --security-group-id  Security group ID"  echo "  -z, --availability-zone  Availability zone"  exit 1}# Parse command-line optionswhile [[ $# -gt 0 ]]; do  case $1 in    -i|--identifier)      RDS_INSTANCE_IDENTIFIER=$2      shift 2      ;;    -c|--instance-class)      RDS_DB_INSTANCE_CLASS=$2      shift 2      ;;    -e|--db-engine)      RDS_DB_ENGINE=$2      shift 2      ;;    -u|--username)      RDS_DB_USERNAME=$2      shift 2      ;;    -p|--password)      RDS_DB_PASSWORD=$2      shift 2      ;;    -d|--db-name)      RDS_DB_NAME=$2      shift 2      ;;    -s|--storage)      RDS_ALLOCATED_STORAGE=$2      shift 2      ;;    -g|--security-group-id)      SECURITY_GROUP_ID=$2      shift 2      ;;    -z|--availability-zone)      RDS_AVAILABILITY_ZONE=$2      shift 2      ;;    *)      usage      ;;  esacdone# Check if required parameters are providedif [[ -z $RDS_INSTANCE_IDENTIFIER || -z $RDS_DB_INSTANCE_CLASS || -z $RDS_DB_ENGINE || -z $RDS_DB_USERNAME || -z $RDS_DB_PASSWORD || -z $RDS_DB_NAME || -z $RDS_ALLOCATED_STORAGE || -z $SECURITY_GROUP_ID || -z $RDS_AVAILABILITY_ZONE ]]; then  usagefi# Create RDS MySQL instanceaws rds create-db-instance \    --db-instance-identifier $RDS_INSTANCE_IDENTIFIER \    --db-instance-class $RDS_DB_INSTANCE_CLASS \    --engine $RDS_DB_ENGINE \    --master-username $RDS_DB_USERNAME \    --master-user-password $RDS_DB_PASSWORD \    --db-name $RDS_DB_NAME \    --allocated-storage $RDS_ALLOCATED_STORAGE \    --vpc-security-group-ids $SECURITY_GROUP_ID \    --availability-zone $RDS_AVAILABILITY_ZONE# Wait for RDS instance to be availableecho "Waiting for RDS instance to be available..."aws rds wait db-instance-available --db-instance-identifier $RDS_INSTANCE_IDENTIFIER# Get RDS endpoint and portRDS_ENDPOINT=$(aws rds describe-db-instances --db-instance-identifier $RDS_INSTANCE_IDENTIFIER --query 'DBInstances[0].Endpoint.Address' --output text)RDS_PORT=$(aws rds describe-db-instances --db-instance-identifier $RDS_INSTANCE_IDENTIFIER --query 'DBInstances[0].Endpoint.Port' --output text)# Print RDS connection detailsecho "RDS instance created successfully!"echo "Endpoint: $RDS_ENDPOINT"echo "Port: $RDS_PORT"